<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (c) 2009 California Institute of Technology.
  ALL RIGHTS RESERVED. U.S. Government sponsorship acknowledged.

$Id$
-->

<document>
  <properties>
    <title>Using Subversion</title>
    <author email="woollard@jpl.nasa.gov">David Woollard</author>
  </properties>

  <body>
    <section name="Using Subversion">
      <p>The OODT repository is accessible from:
      </p>

      <source>
http://oodt.jpl.nasa.gov/repo
      </source>

      <p>A JPL user name and password are required to access the repository. We
      recommend that you use a Subversion client to interact with the repository. 
      The client application is normally installed on *nix systems configured for
      development work. If the client application is required on a user's local 
      desktop machine, it can be downloaded from the 
      <a href="http://subversion.tigris.org/project_packages.html" 
      target="_blank">Subversion Download</a> page. Binary packages are available for 
      popular platforms (e.g. Windows, Mac OSX, etc.).
      </p>

      <p>Configuration for the client application is relatively minimal. The 
      <i>PATH</i> environment variable should include the directory where the 
      <i>svn</i> executable resides. The <i>SVN_EDITOR</i> variable can be set to 
      specify the editor of choice (e.g. /usr/bin/vi, /usr/bin/emacs, etc.) for 
      entering change comments. If the <i>SVN_EDITOR</i> variable is not set, the 
      default editor will be utilized.
      </p>
    </section>
    <section name="Standard Commands">
      <p>The contents of the repository are organized by project. The projects 
      are in turn organized in a directory hierarchy. Each project contains the 
      following three directories at the top-level of the project:
      </p>

      <ul>
        <li><b>branches</b> - This directory will contain copies of the trunk 
        directory that have been branched off of the main source tree to address 
        specific issues while the trunk is continued to be developed.
        </li>
        <li><b>tags</b> - This directory will contain copies of the trunk 
        directory for the purposes of capturing a release or milestone.
        </li>
        <li><b>trunk</b> - This directory will contain the main source tree.
        </li>
      </ul>

      <p>Many of the Subversion commands are recursive in nature, meaning that from 
      the point in the project directory where the command is issued, all files and 
      subdirectories will be traversed and acted on appropriately.
      </p>

      <subsection name="Checkout a Project">
        <p>In order to make modifications to an existing project, that project must 
        be checked out to the user's local environment. For projects containing the 
        <i>branches</i>, <i>tags</i> and <i>trunk</i> directories, the <i>trunk</i> 
        directory can be checked out directly into a local directory named for the 
        project as demonstrated in the following example:
        </p>

        <source>
svn checkout \
http://oodt/repo/cas-filemgr/trunk/ \
cas-filemgr
        </source>
        
        <p>Normally, all released versions of each project exist in the tags directory
        under the specific project. For example, the 1.0.0 release of the cas-curator
        project can be checked out using the following command:</p> 

<source>
svn checkout \
http://oodt/repo/cas-curator/tags/1_0_0_release \
cas-curator_v1.0.0
        </source>

      </subsection>
      <subsection name="Add New Files or Directories">
        <p>New files or directories can be added to a project. Once the project has 
        been checked out to a local directory, the user can traverse the project 
        directory and create any necessary directories or files and add them to the 
        Subversion repository as follows:
        </p>

        <source>
mkdir testdir
svn add testdir
        </source>

        <p>The above example demonstrates the addition of a directory to an existing 
        repository. Files can be added in the same manner. Once files and directories 
        have been added, they must be committed to the repository with the 
        <a href="#Commit Additions or Modifications"><i>svn commit</i></a> command.
        </p>
      </subsection>

      <subsection name="Determine Local Modifications">
        <p>In order to determine what local modifications, if any, have been made to 
        the current project, perform the following command in the top-level directory 
        of the local instance of the project:
        </p>

        <source>
svn status
        </source>

        <p>The above command will tell you which files have been added or modified in 
        the local instance. In order to determine what was modified in a given file, 
        perform the following command:
        </p>

        <source>
svn diff
        </source>
      </subsection>

      <subsection name="Commit Additions or Modifications">
        <p>In order for local additions or modifications to be incorporated into the 
        Subversion repository for a given project, they must be committed. This can be 
        accomplished with the following command:
        </p>

        <source>
svn commit
        </source>

        <p>The above command will launch your locally configured editor, which is where 
        the previously mentioned <i>SVN_EDITOR</i> environment variable comes into play. 
        Please enter a meaningful comment regarding the addition or modification and 
        then issue the appropriate save and exit command for the editor. In the case 
        where multiple additions or modifications are captured by this command, the 
        comment will be associated with each item when it is committed to the 
        repository.
        </p>
      </subsection>

      <subsection name="Get the Latest Updates">
        <p>In order to get the latest updates to the current project, perform the 
        following command in the top level directory of the local instance of the 
        project:
        </p>

        <source>
svn update
        </source>

        <p>This command is very useful if you checked out the project directory a week 
        or so ago and now you want to make modifications to it. In that time someone 
        else may have made a modification or two to the same directory, leaving your 
        local copy out of date. Executing the <i>svn update</i> command will bring 
        your local copy up to date with the repository.
        </p>
      </subsection>

      <subsection name="Get History">
        <p>In order to the history for a file, directory or revision from a project 
        directory, perform one of the following commands in a local project directory, 
        respectively:
        </p>

        <source>
svn log test.java
svn log http://oodt/repo/cas-filemgr/trunk/
svn log --revision 9999
        </source>
      </subsection>
    </section>

    <section name="Advanced Commands">
      <p>Although these commands aren't all that advanced, they can create quite a 
      mess if not executed properly.
      </p>

      <subsection name="Copy a File or Directory">
        <p>Typically the copy command is used for capturing a copy of the specified 
        directory for a software release. The following command copies the current 
        <i>trunk</i> directory of the <i>product-tools</i> project in the repository 
        over to the <i>tags</i> directory under the name <i>1.0.0</i>:
        </p>

        <source>
svn copy http://oodt/repo/cas-curator/trunk/ \
http://oodt/repo/cas-curator/tags/1_0_0/ \
-m "Initial release of the cas-curator project."
        </source>

        <p>Although Subversion will still allow the user to make modifications to 
        files under the <i>tags</i> directory, by policy this will not be allowed. 
        These directories represent releases of software and will not be modified 
        after the fact.
        </p>
      </subsection>

      <subsection name="Move a File or Directory">
        <p>Unlike CVS, Subversion makes it very easy to relocate a file or 
        directory within the repository.
        </p>

        <source>
svn move
        </source>
      </subsection>

      <subsection name="Delete a File or Directory">
        <p>More to come on this command.
        </p>

        <source>
svn delete
        </source>
      </subsection>
    </section>
    <section name="Acknowledgments">
    	<p>Much of the material in this Subversion guide was originally authored 
    	by Julie Wang and Sean Hardman under the sponsorship of NASA Jet 
    	Propulsion Laboratory's Planetary Data System. </p>
    </section>
    <section name="References">
      <p>Additional information regarding Subversion can be found at the following 
      web sites:
      </p>

      <ul>
        <li><a href="http://svnbook.red-bean.com/" target="_blank">Version Control 
        with Subversion</a> - Online Book
        </li>
        <li><a href="http://subversion.tigris.org/" target="_blank">Subversion 
        Repository</a> - Software download, etc.
        </li>
      </ul>
    </section>
  </body>
</document>
